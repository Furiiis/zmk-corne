/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TOP     3

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        qq: qq {
            compatible = "zmk,behavior-mod-morph";
            label = "QQ";
            bindings = <&kp Q>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ww: ww {
            compatible = "zmk,behavior-mod-morph";
            label = "WW";
            bindings = <&kp W>, <&kp AT_SIGN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ee: ee {
            compatible = "zmk,behavior-mod-morph";
            label = "EE";
            bindings = <&kp E>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        rr: rr {
            compatible = "zmk,behavior-mod-morph";
            label = "RR";
            bindings = <&kp R>, <&kp DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        tt: tt {
            compatible = "zmk,behavior-mod-morph";
            label = "TT";
            bindings = <&kp T>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        yy: yy {
            compatible = "zmk,behavior-mod-morph";
            label = "YY";
            bindings = <&kp Y>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        uu: uu {
            compatible = "zmk,behavior-mod-morph";
            label = "UU";
            bindings = <&kp U>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ii: ii {
            compatible = "zmk,behavior-mod-morph";
            label = "II";
            bindings = <&kp I>, <&kp ASTERISK>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        oo: oo {
            compatible = "zmk,behavior-mod-morph";
            label = "OO";
            bindings = <&kp O>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        pp: pp {
            compatible = "zmk,behavior-mod-morph";
            label = "PP";
            bindings = <&kp P>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };
    };

    macros {
        switchToRusLayout: switchToRusLayout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LSHFT) &to 1>;
            label = "SWITCHTORUSLAYOUT";
        };

        switchToEngLayout: switchToEngLayout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LSHIFT) &to 0>;
            label = "SWITCHTOENGLAYOUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R  &kp T               &kp Y      &kp U  &kp I          &kp O    &kp P          &kp RALT
&kp TAB    &kp A  &kp S  &kp D         &kp F  &kp G               &kp H      &kp J  &kp K          &kp L    &mt LWIN SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B               &kp N      &kp M  &kp COMMA      &kp DOT  &kp COLON      &switchToRusLayout
                         &kp LEFT_ALT  &mo 2  &mt LSHIFT ENTER    &kp SPACE  &mo 3  &kp BACKSPACE
            >;
        };

        RUS_LAYER {
            bindings = <
&kp RU_CYRILLIC_IO  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE      &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp TAB             &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE      &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LCTRL           &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I       &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp DOT              &switchToEngLayout
                                                                   &kp LEFT_ALT        &mo 2               &mt LEFT_SHIFT ENTER    &kp SPACE           &mo 3                      &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp ESC    &kp EXCL         &kp DQT          &kp PIPE         &kp AMPS         &kp KP_EQUAL       &kp RU_LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &kp UNDER  &kp RALT
&kp GRAVE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5    &kp LEFT_BRACE           &kp RIGHT_BRACE        &kp PLUS       &kp KP_MINUS      &kp SQT    &kp BSLH
&kp LCTRL  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0    &kp LEFT_BRACKET         &kp RIGHT_BRACKET      &kp STAR       &kp SLASH         &kp AT     &kp QUESTION
                                             &kp LEFT_ALT     &mo 2            &mt LSHFT ENTER    &kp SPACE                &mo 3                  &kp BACKSPACE
            >;
        };

        top_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  BRIGHT_UP  |  BRIGHT_DOWN  |  VOL_DOWN  |  VOL_UP  |  MUTE  |      |  -  |  7  |  8  |  9  |  +  | BKSP |
            // | CTRL |             |               |             |         |        |      |  .  |  4  |  5  |  6  |  -  |  `   |
            // | SHFT |             |              |             |          |        |      |  0  |  1  |  2  |  3  |  *  |  /   |
            //                      |              |             |          |         |     |     |     |

            bindings = <
&kp ESC    &kp F1                &kp F2                &kp F3            &kp F4             &kp F5                  &kp F6           &kp F7               &kp F8         &kp F9  &kp F10     &kp RALT
&kp TAB    &kp F11               &kp F12               &kp C_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT              &trans           &kp LEFT             &kp DOWN       &kp UP  &kp RIGHT   &kp GRAVE
&kp LCTRL  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &kp PRINTSCREEN  &kp LS(PRINTSCREEN)  &trans         &trans  &kp INSERT  &trans
                                                       &kp LALT          &mo 2              &mt LEFT_SHIFT ENTER    &kp SPACE        &mo 3                &kp BACKSPACE
            >;
        };
    };
};
